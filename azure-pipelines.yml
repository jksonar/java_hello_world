trigger:
  - master
  - dev
  - uat

pool:
  name: Default
  demands:
    - Agent.Name -equals vm-azuredevops

variables:
  appDirectoryDev: "/var/java/dev/"
  appDirectoryUat: "/var/java/uat/"
  appDirectoryProd: "/var/java/prod/"

stages:
  - stage: Deploy
    displayName: "Deploy Stage"
    jobs:
      - job: DeployToDev
        displayName: "Deploy to Dev"
        condition: eq(variables['Build.SourceBranchName'], 'dev')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to Dev"
              /opt/apache-maven-3.9.6/bin/mvn clean package
              cp -f $(Pipeline.Workspace)/s/target/java-helloworld-0.0.1-SNAPSHOT.jar $(appDirectoryDev)
              sudo kill -15 $(ps -ef |grep nohup|grep 7070|awk '{print $2}')
              sudo nohup java -jar $(appDirectoryDev)java-helloworld-0.0.1-SNAPSHOT.jar --server.port=7070 &
            displayName: "Deploy to Dev"

      - job: DeployToUAT
        displayName: "Deploy to UAT"
        condition: eq(variables['Build.SourceBranchName'], 'uat')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to UAT"
              /opt/apache-maven-3.9.6/bin/mvn clean package
              cp -f $(Pipeline.Workspace)/s/target/java-helloworld-0.0.1-SNAPSHOT.jar $(appDirectoryUat)
              nohup java -jar $(appDirectoryUat)java-helloworld-0.0.1-SNAPSHOT.jar --server.port=9090 &
            displayName: "Deploy to UAT"

      - job: DeployToProd
        displayName: "Deploy to Prod"
        condition: eq(variables['Build.SourceBranchName'], 'master')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to Prod"
              sudo source /etc/profile.d/maven.sh
              sudo mvn clean package
              sudo cp -f $(Pipeline.Workspace)/s/target/java-helloworld-0.0.1-SNAPSHOT.jar $(appDirectoryProd)
              sudo nohup java -jar $(appDirectoryProd)java-helloworld-0.0.1-SNAPSHOT.jar &
            displayName: "Deploy to Prod"
