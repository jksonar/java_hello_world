trigger:
  - master
  - dev
  - uat

pool:
  name: Default
  demands:
    - Agent.Name -equals vm-azuredevops

variables:
  appDirectoryDev: "/var/java/dev/"
  appDirectoryUat: "/var/java/uat/"
  appDirectoryProd: "/var/java/prod/"
  jarFileName: "java-helloworld-0.0.1-SNAPSHOT.jar"

stages:
  - stage: Deploy
    displayName: "Deploy Stage"
    jobs:
      - job: DeployToDev
        displayName: "Deploy to Dev"
        condition: eq(variables['Build.SourceBranchName'], 'dev')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to Dev"              
              sudo docker compose -f docker-compose-dev.yml build --no-cache
              sudo docker compose -f docker-compose-dev.yml down
              sudo docker compose -f docker-compose-dev.yml up -d
            displayName: "Deploy to Dev"

      - job: DeployToUAT
        displayName: "Deploy to UAT"
        condition: eq(variables['Build.SourceBranchName'], 'uat')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to UAT"
              sudo docker compose -f docker-compose-uat.yml build --no-cache
              sudo docker compose -f docker-compose-uat.yml down
              sudo docker compose -f docker-compose-uat.yml up -d
            displayName: "Deploy to UAT"

      - job: DeployToProd
        displayName: "Deploy to Prod"
        condition: eq(variables['Build.SourceBranchName'], 'master')
        steps:
          - checkout: self
          - script: |
              echo "Deploying to Prod"
              sudo docker compose -f docker-compose-prod.yml build --no-cache
              sudo docker compose -f docker-compose-prod.yml down
              sudo docker compose -f docker-compose-prod.yml up -d
            displayName: "Deploy to Prod"
